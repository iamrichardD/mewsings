version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: mewsings-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - FRONTEND_API_URL=${FRONTEND_API_URL}
      - FRONTEND_WEBSOCKET_URL=${FRONTEND_WEBSOCKET_URL}
    depends_on:
      - backend
    networks:
      - mewsings-network
    restart: unless-stopped

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: mewsings-backend
    ports:
      - "${BACKEND_PORT}:3000"
    environment:
      - NODE_ENV=${BACKEND_NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - JWT_SECRET=${BACKEND_JWT_SECRET}
      - JWT_EXPIRATION=${BACKEND_JWT_EXPIRATION}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    depends_on:
      - postgres
      - redis
    networks:
      - mewsings-network
    restart: unless-stopped

  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    container_name: mewsings-postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mewsings-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis service for WebSocket state management
  redis:
    image: redis:7-alpine
    container_name: mewsings-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - mewsings-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mewsings-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
